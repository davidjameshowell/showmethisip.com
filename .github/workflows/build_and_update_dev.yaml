name: Build and Update via Zappa Docker for development stage
on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: false
  push:
    branches:
      - main

jobs:
  build_and_update:
    name: "Build and Update Zappa Deployment - Dev"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install python version
      uses: gabrielfalcao/pyenv-action@v8
      with:
        default: "3.7.3"
        command: pip install -U pip

    - name: Install Zappa dependencies
      run: pip install poetry

    - name: Install dependencies from Poetry
      run: poetry install
      env: 
        POETRY_VIRTUALENVS_CREATE: false

    - name: Set up QEMU for multi arch builds
      uses: docker/setup-qemu-action@master
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ZAPPA_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.ZAPPA_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}

    - name: Build Docker image
      run: |
        bash ./scripts/build.sh
      env:
        STAGE: development
        TAG: ${{ github.sha }}

    # Forked package includes fix
    #- name: Patch Zappa core due to PR #999
    #  run: |
    #    sed -i 's;self.cf_template.add_description("Automatically generated with Zappa");self.cf_template.set_description("Automatically generated with Zappa");g' '/opt/hostedtoolcache/pyenv_root/2.0.0/x64/versions/3.7.3/lib/python3.7/site-packages/zappa/core.py'

    - name: Update Zappa stage
      run: |
        bash ./scripts/update.sh
      env:
        STAGE: development
        TAG: ${{ github.sha }}
